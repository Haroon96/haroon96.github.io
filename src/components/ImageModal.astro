<div id="image-modal" class="modal">
    <div class="modal-background"></div>
    <div class="modal-content">
        <div
            class="is-flex is-align-items-center is-justify-content-center photo-container"
        >
            <span
                class="photo-previous"
                aria-label="previous"
                id="photo-previous"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="18"
                    viewBox="0 0 24 24"
                    ><path
                        d="M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z"
                    ></path></svg
                >
            </span>
            <img id="modal-img" />
            <span class="photo-next" aria-label="next" id="photo-next">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="18"
                    viewBox="0 0 24 24"
                    ><path
                        d="M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z"
                    ></path></svg
                >
            </span>
        </div>
        <div id="modal-description" class="photo-description"></div>
    </div>
    <button class="modal-close is-large" aria-label="close"></button>
</div>

<script>
    // @ts-nocheck
    document.addEventListener("DOMContentLoaded", () => {
        // build list of images
        const images = document.querySelectorAll(".photo > figure.image img")!;

        // fetch DOM elems
        const modalImg = document.getElementById("modal-img")!;
        const modalDesc = document.getElementById("modal-description")!;

        let currentImage;

        modalImg.addEventListener("load", () => {
            modalDesc.style.width = `${modalImg.width}px`;
            modalDesc.style.left = `calc(50% - ${modalImg.width / 2}px)`;
        });

        // Functions to open and close a modal
        function openModal($el, src, text) {
            setImage(src, text);
            $el.classList.add("is-active");
        }

        function closeModal($el) {
            modalImg.src = null;
            $el.classList.remove("is-active");
        }

        function closeAllModals() {
            (document.querySelectorAll(".modal") || []).forEach(($modal) => {
                closeModal($modal);
            });
        }

        // Add a click event on buttons to open a specific modal
        (document.querySelectorAll(".js-modal-trigger") || []).forEach(
            ($trigger) => {
                const modal = $trigger.dataset.target;
                const $target = document.getElementById(modal);

                $trigger.addEventListener("click", () => {
                    openModal(
                        $target,
                        $trigger.dataset.src,
                        $trigger.dataset.description,
                    );
                    currentImage = $trigger.dataset.index;
                });
            },
        );

        // Add a click event on various child elements to close the parent modal
        (
            document.querySelectorAll(
                ".modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button",
            ) || []
        ).forEach(($close) => {
            const $target = $close.closest(".modal");

            $close.addEventListener("click", () => {
                closeModal($target);
            });
        });

        // Add a keyboard event to close all modals
        document.addEventListener("keydown", (event) => {
            const e = event || window.event;

            if (e.keyCode === 27) {
                // Escape key
                closeAllModals();
            }
        });

        document
            .getElementById("photo-previous")
            .addEventListener("click", () => {
                currentImage = parseInt(currentImage) - 1;
                if (currentImage < 0) {
                    currentImage = images.length - 1;
                }
                setImage(
                    images[currentImage].dataset.src,
                    images[currentImage].dataset.description,
                );
            });

        document.getElementById("photo-next").addEventListener("click", () => {
            currentImage = parseInt(currentImage) + 1;
            if (currentImage >= images.length) {
                currentImage = 0;
            }
            setImage(
                images[currentImage].dataset.src,
                images[currentImage].dataset.description,
            );
        });

        function setImage(src, caption) {
            modalImg.src = src;
            modalDesc.innerHTML = `<span>${caption}</span>`;
        }
    });
</script>
